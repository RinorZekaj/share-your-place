{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js"],"names":["Map","props","mapRef","useRef","center","zoom","console","log","useEffect","mapboxgl","accessToken","container","style","ref","id","className","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","clearError","error","sendRequest","useState","showMap","setShowMap","showDeleteModal","setShowDeleteModal","confirmDeleteHandler","a","process","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userID","creatorId","to","PlaceList","items","length","map","place","key","creator","location","UserPlaces","userId","useParams","loadedPlaces","setLoadedPlaces","responseData","places","fetchPlaces","deletedPlaceID","prevPlaces","filter","href","size","children","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","createPortal","document","getElementById","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","axios","data","signal","response","reqCtrl","statusText","Error","message","forEach","abortCtrl","abort"],"mappings":"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","file":"static/js/7.e1ad18c2.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from 'mapbox-gl'\r\n\r\nimport \"./Map.css\";\r\n\r\nfunction Map(props) {\r\n  const mapRef = useRef();\r\n  const { center, zoom } = props;\r\n  console.log(center);\r\n\r\n  useEffect(() => {\r\n    mapboxgl.accessToken = \"pk.eyJ1Ijoicmlub3J6ZWthaiIsImEiOiJja2Z6dGY5dTgwNmY0MnBxdTVodHZmcjQxIn0.iLwlg8I0uKvTPN5FW7ENNQ\"\r\n    const map = new mapboxgl.Map({\r\n      container: \"map\",\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      id=\"map\"\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport \"./PlaceItem.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction PlaceItem(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, clearError, error, sendRequest } = useHttpClient();\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowDeleteModal(false);\r\n\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { \"Content-Type\": \"application/json\", \"Authorization\": \"Bearer \" + auth.token }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={() => setShowMap(false)}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={() => setShowMap(false)}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={12} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showDeleteModal}\r\n        onCancel={() => setShowDeleteModal(false)}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <>\r\n            <Button inverse onClick={() => setShowDeleteModal(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={() => setShowMap(true)}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userID === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userID === props.creatorId && (\r\n              <Button danger onClick={() => setShowDeleteModal(true)}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nfunction PlaceList(props) {\r\n  if (props.items && props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places fount. Maybe create one</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items && props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nfunction UserPlaces() {\r\n  const userId = useParams().userID;\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n\r\n  const { sendRequest, error, isLoading, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`,\r\n        \"GET\",\r\n        {},\r\n        { \"Content-Type\": \"application/json\" }\r\n      );\r\n\r\n      console.log(responseData);\r\n      setLoadedPlaces(responseData.places);\r\n    };\r\n\r\n    fetchPlaces();\r\n  }, [sendRequest]);\r\n\r\n  const deletePlaceHandler = (deletedPlaceID) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceID)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner />}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDelete={deletePlaceHandler} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserPlaces;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nfunction Button(props) {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button-inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button-inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await axios({\r\n          method,\r\n          url,\r\n          headers,\r\n          data: body,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = response.data;\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        \r\n        setIsLoading(false);\r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error(responseData.message);\r\n        }\r\n        console.log(\"Success\");\r\n        return responseData;\r\n      } catch (err) {\r\n        console.log(\"Error\", err.response.data.message);\r\n        setError(err.response.data.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react'\r\n\r\nimport './Card.css'\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n"],"sourceRoot":""}